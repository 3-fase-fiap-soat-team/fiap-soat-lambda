name: 🚀 Deploy Fastfood Infra

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Infraestrutura AWS com Terraform
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      TF_WORKING_DIR: ./infrastructure

    steps:
      # 1️⃣ Checkout do código
      - name: 📦 Checkout do repositório
        uses: actions/checkout@v3

      # 2️⃣ Configurar Node.js (para build das Lambdas)
      - name: ⚙️ Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3️⃣ Configurar AWS CLI
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      # 4️⃣ Instalar Terraform
      - name: 🛠️ Instalar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      # 5️⃣ Build das Lambdas (antes de empacotar no Terraform)
      - name: 🔨 Build Signup Lambda
        run: |
          cd fastfood-signup-lambda
          npm ci
          npm run build
          cd ..

      - name: 🔨 Build Auth Lambda
        run: |
          cd fastfood-auth-lambda
          npm ci
          npm run build
          cd ..

      # 6️⃣ Inicializar Terraform
      - name: 📁 Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      # 7️⃣ Validar e planejar mudanças
      - name: 🧠 Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -out=tfplan

      # 8️⃣ Aplicar alterações na infraestrutura
      - name: 🚀 Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve tfplan

      # 9️⃣ Mostrar as saídas do Terraform
      - name: 📤 Mostrar outputs
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform output
